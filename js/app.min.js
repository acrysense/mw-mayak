"use strict";

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
document.addEventListener('DOMContentLoaded', function () {
  // function's
  function bodyFixScroll(status) {
    var scrollPosition = 0;
    var paddingOffset = window.innerWidth - document.body.offsetWidth + 'px';
    var elementsFixed = document.querySelectorAll('.fixed');
    if (status) {
      document.body.classList.add('scroll-disabled');
      scrollPosition = window.pageYOffset;
      document.body.style.overflow = 'hidden';
      document.body.style.position = 'fixed';
      if (document.body.style.top) {
        document.body.style.top = document.body.style.top;
      } else {
        document.body.style.top = '-' + scrollPosition + 'px';
      }
      document.body.style.width = '100%';
      document.body.style.paddingRight = paddingOffset;
      if (elementsFixed) {
        elementsFixed.forEach(function (item) {
          item.style.marginRight = paddingOffset;
        });
      }
    } else {
      document.body.classList.remove('scroll-disabled');
      scrollPosition = Math.abs(parseInt(document.querySelector('body').style.top.replace('px', '')));
      document.body.style.removeProperty('overflow');
      document.body.style.removeProperty('position');
      document.body.style.removeProperty('top');
      document.body.style.removeProperty('width');
      document.body.style.removeProperty('padding-right');
      if (elementsFixed) {
        elementsFixed.forEach(function (item) {
          item.style.removeProperty('margin-right');
        });
      }
      window.scrollTo({
        top: !isNaN(scrollPosition) ? scrollPosition : 0,
        behavior: 'instant'
      });
    }
  }

  // checker
  var useItemChecker = function useItemChecker(els, onClickOutside) {
    var checkBodyClick = function checkBodyClick(e) {
      var currentEl = e.target;
      while (currentEl) {
        if (els.includes(currentEl)) break;
        currentEl = currentEl.parentNode;
      }
      if (!currentEl) {
        onClickOutside();
        removeBodyChecker();
      }
    };
    function setBodyChecker() {
      document.documentElement.addEventListener('click', checkBodyClick);
    }
    function removeBodyChecker() {
      document.documentElement.removeEventListener('click', checkBodyClick);
    }
    return {
      setBodyChecker: setBodyChecker,
      removeBodyChecker: removeBodyChecker
    };
  };

  // inputmask
  Inputmask().mask(document.querySelectorAll('input'));

  // aos
  AOS.init({
    once: true
  });

  // textarea
  var allTexareas = document.querySelectorAll('textarea');
  if (allTexareas) {
    allTexareas.forEach(function (el) {
      el.style.height = el.setAttribute('style', 'height: ' + el.scrollHeight + 'px');
      el.classList.add('auto');
      el.addEventListener('input', function (e) {
        el.style.height = 'auto';
        el.style.height = el.scrollHeight + 'px';
      });
    });
  }

  // lottie
  // const mainWaves = document.getElementById('main-waves')
  var mainFirstWaves = document.getElementById('main-first-animation');
  var mainSecondWaves = document.getElementById('main-second-animation');
  var architectureWaves = document.getElementById('architecture-waves');
  var engineeringWaves = document.getElementById('engineering-waves');
  var yardWaves = document.getElementById('yard-waves');
  var mopsWaves = document.getElementById('mops-waves');
  var bgWaves = document.getElementById('bg-waves');
  if (mainFirstWaves && mainSecondWaves) {
    // if (mainWaves) {
    // var mainWavesAnimation = lottie.loadAnimation({
    //     container: mainWaves,
    //     renderer: 'svg',
    //     loop: true,
    //     autoplay: true,
    //     path: 'main.json'
    // });

    var firstAnimation = lottie.loadAnimation({
      container: mainFirstWaves,
      renderer: 'svg',
      loop: false,
      autoplay: true,
      path: 'main-first.json'
    });
    firstAnimation.addEventListener('complete', function () {
      var secondAnimation = lottie.loadAnimation({
        container: mainSecondWaves,
        renderer: 'svg',
        loop: true,
        autoplay: true,
        path: 'main.json'
      });
      setTimeout(function () {
        mainFirstWaves.classList.add('is--hidden');
      }, 50);
    });
  }
  if (architectureWaves) {
    var architectureWavesAnimation = lottie.loadAnimation({
      container: architectureWaves,
      renderer: 'svg',
      loop: true,
      autoplay: true,
      path: 'architecture.json'
    });
  }
  if (engineeringWaves) {
    var engineeringWavesAnimation = lottie.loadAnimation({
      container: engineeringWaves,
      renderer: 'svg',
      loop: true,
      autoplay: true,
      path: 'engineering.json'
    });
  }
  if (yardWaves) {
    var yardWavesAnimation = lottie.loadAnimation({
      container: yardWaves,
      renderer: 'svg',
      loop: true,
      autoplay: true,
      path: 'yard.json'
    });
  }
  if (mopsWaves) {
    var mopsWavesAnimation = lottie.loadAnimation({
      container: mopsWaves,
      renderer: 'svg',
      loop: true,
      autoplay: true,
      path: 'mops.json'
    });
  }
  if (bgWaves) {
    var bgWavesAnimation = lottie.loadAnimation({
      container: bgWaves,
      renderer: 'svg',
      loop: true,
      autoplay: true,
      path: 'white-lines.json'
    });
  }

  // nav map
  var navMapTabsItems = document.querySelectorAll('.nav-map-tabs__item');
  var navMapTabsTitle = document.querySelectorAll('.nav-map-tabs__tab');
  var navMapQuoteMore = document.querySelectorAll('.nav-map-quote__more');
  var navMapQuoteBody = document.querySelector('.nav-map-quote__body');
  if (navMapTabsItems) {
    navMapTabsItems.forEach(function (item, i) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        var parent = item.closest('.nav-map-tabs');
        parent.querySelectorAll('.nav-map-tabs__item').forEach(function (child) {
          return child.classList.remove('is--active');
        });
        parent.querySelectorAll('.nav-map-tabs__holder').forEach(function (child) {
          return child.classList.remove('is--active');
        });
        item.classList.add('is--active');
        var el = parent.querySelector('.is--active');
        var index = _toConsumableArray(parent.querySelectorAll('.nav-map-tabs__item')).indexOf(el);
        parent.querySelectorAll('.nav-map-tabs__holder')[index].classList.add('is--active');
      });
    });
  }
  if (navMapTabsTitle) {
    navMapTabsTitle.forEach(function (item) {
      var close = function close() {
        var parent = item.closest('.nav-map-tabs');
        var description = parent.querySelector('.nav-map-tabs__holder.is--active .nav-map__info');
        description.classList.remove('is--active');
      };
      var itemChecker = useItemChecker([item.parentNode], close);
      item.addEventListener('click', function (event) {
        if (window.innerWidth <= 1023) {
          event.preventDefault();
          var parent = item.closest('.nav-map-tabs');
          var description = parent.querySelector('.nav-map-tabs__holder.is--active .nav-map__info');
          if (description.classList.contains('is--active')) {
            close();
          } else {
            description.classList.add('is--active');
            itemChecker.setBodyChecker();
          }
        }
      });
    });
  }
  if (navMapQuoteMore) {
    navMapQuoteMore.forEach(function (item) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        var parent = item.closest('.nav-map-quote__body');
        if (parent.classList.contains('is--expanded')) {
          parent.classList.remove('is--expanded');
          setTimeout(function () {
            parent.classList.add('is--abbreviated');
          }, 200);
        } else {
          parent.classList.remove('is--abbreviated');
          parent.classList.add('is--expanded');
        }
      });
    });
  }
  if (navMapQuoteBody) {
    if (window.innerWidth <= 743) {
      navMapQuoteBody.classList.add('is--abbreviated');
    }
  }

  // gsap
  var animateGSAP = document.querySelectorAll('.animate');
  var animateVSGSAP = document.querySelectorAll('.animate-vs');
  var parallaxGSAP = document.querySelectorAll('.parallax-section');
  if (animateGSAP) {
    gsap.registerPlugin(ScrollTrigger);
    gsap.utils.toArray('.animate').forEach(function (element) {
      gsap.to(element, {
        y: 0,
        opacity: 1,
        duration: 1.5,
        ease: "power3.out",
        scrollTrigger: {
          trigger: element,
          start: "top 85%",
          end: "top 65%",
          scrub: false,
          toggleActions: "play none none none"
        }
      });
    });
  }
  if (animateVSGSAP) {
    gsap.registerPlugin(ScrollTrigger);
    gsap.utils.toArray('.animate-vs').forEach(function (element) {
      gsap.to(element, {
        opacity: 1,
        duration: 1.5,
        ease: "power3.out",
        scrollTrigger: {
          trigger: element,
          start: "top 70%",
          end: "top 50%",
          scrub: false,
          toggleActions: "play none none none"
        }
      });
    });
  }
  if (parallaxGSAP) {
    gsap.registerPlugin(ScrollTrigger);
    gsap.utils.toArray('.parallax-section').forEach(function (section) {
      var image = section.querySelector('.parallax-image');
      gsap.to(image, {
        y: function y(index, target) {
          return -target.offsetHeight * 0.2;
        },
        ease: "none",
        scrollTrigger: {
          trigger: section,
          start: "top bottom",
          end: "bottom top",
          scrub: true
        }
      });
    });
  }

  // promo details animation
  var promoDetailsItem = document.querySelectorAll('.promo-details__item');
  var handleScroll = function handleScroll() {
    var viewportHeight = window.innerHeight || document.documentElement.clientHeight;
    var viewportCenter = viewportHeight / 2;
    promoDetailsItem.forEach(function (item) {
      var rect = item.getBoundingClientRect();
      var itemCenter = rect.top + rect.height / 2;
      if (itemCenter > viewportCenter - rect.height / 2 && itemCenter < viewportCenter + rect.height / 2) {
        // const targetHeight = viewportHeight * 0.8;
        // item.style.height = `${targetHeight}px`;

        if (!item.classList.contains('is--open')) {
          item.classList.add('is--open');
        }
      } else {
        if (item.classList.contains('is--open')) {
          item.classList.remove('is--open');
        }
      }
    });

    // ScrollTrigger.refresh();
  };

  handleScroll();
  window.addEventListener('scroll', handleScroll);
  window.addEventListener('resize', function () {
    handleScroll();
    if (navMapQuoteBody) {
      if (window.innerWidth <= 743) {
        navMapQuoteBody.classList.add('is--abbreviated');
      } else {
        navMapQuoteBody.classList.remove('is--abbreviated');
      }
    }
  });

  // menu
  var header = document.getElementById('header');
  var menu = document.getElementById('menu');
  var menuTrigger = document.getElementById('hamburger-toggle');
  if (header && menu && menuTrigger) {
    menuTrigger.addEventListener('click', function (event) {
      event.preventDefault();
      if (menu.classList.contains('is--active')) {
        header.classList.remove('is--menu');
        menuTrigger.classList.remove('is--active');
        menu.classList.remove('is--active');
        bodyFixScroll();
      } else {
        header.classList.add('is--menu');
        menuTrigger.classList.add('is--active');
        menu.classList.add('is--active');
        bodyFixScroll(1);
      }
    });
  }

  // menu nav
  var menuNavLink = document.querySelectorAll('.menu__link');
  var menuImg = document.querySelector('.menu__img');
  if (menuNavLink) {
    menuNavLink.forEach(function (link) {
      link.addEventListener('mouseenter', function (event) {
        var source = link.dataset.img;
        // const linkRect = link.getBoundingClientRect();

        menuImg.querySelector('img').src = source;
        if (!menuImg.classList.contains('is--active')) {
          menuImg.classList.add('is--active');
        }

        // menuImg.querySelector('img').onload = function () {
        //     const imgRect = menuImg.getBoundingClientRect();

        //     // let imgX = linkRect.right;
        //     // let imgY = linkRect.top;
        //     let imgX = event.clientX + 20;
        //     let imgY = event.clientY + 20;

        //     // if (imgX + imgRect.width > window.innerWidth) {
        //     //     imgX = linkRect.left - imgRect.width;
        //     // }

        //     // if (imgY + imgRect.height > window.innerHeight) {
        //     //     imgY = window.innerHeight - imgRect.height;
        //     // }

        //     if (imgX + imgRect.width > window.innerWidth) {
        //         imgX = window.innerWidth - imgRect.width - 10;
        //     }
        //     if (imgY + imgRect.height > window.innerHeight) {
        //         imgY = window.innerHeight - imgRect.height - 10;
        //     }

        //     menuImg.style.left = `${imgX}px`;
        //     menuImg.style.top = `${imgY}px`;

        //     if (!menuImg.classList.contains('is--active')) {
        //         menuImg.classList.add('is--active')
        //     }
        // };
      });

      link.addEventListener('mousemove', function (event) {
        var imgRect = menuImg.getBoundingClientRect();
        var imgX = event.clientX - 25;
        var imgY = event.clientY + 25;
        if (imgX + Number(60) + imgRect.width > window.innerWidth) {
          imgX = event.clientX - imgRect.width - 85;
        }
        if (imgY + imgRect.height > window.innerHeight) {
          imgY = window.innerHeight - imgRect.height;
        }
        menuImg.style.left = "".concat(imgX, "px");
        menuImg.style.top = "".concat(imgY, "px");
      });
      link.addEventListener('mouseleave', function () {
        if (menuImg.classList.contains('is--active')) {
          menuImg.classList.remove('is--active');
        }
      });
    });
  }

  // btn to top
  var btnToTop = document.querySelector('.footer__to-top');
  var rootElement = document.documentElement;
  function scrollToTop() {
    rootElement.scrollTo({
      top: 0,
      behavior: 'smooth'
    });
  }
  if (btnToTop) {
    btnToTop.addEventListener('click', scrollToTop);
  }

  // gallery slider
  var gallerySlider = document.querySelector('.gallery__slider .swiper');
  if (gallerySlider) {
    var myGallerySlider = new Swiper(gallerySlider, {
      slidesPerView: 1,
      loop: true,
      allowTouchMove: false,
      speed: 800,
      parallax: true,
      watchSlidesProgress: true,
      navigation: {
        prevEl: '.gallery__slider .swiper-button-prev',
        nextEl: '.gallery__slider .swiper-button-next'
      }
    });
  }

  // gallery buttons
  var gallerySliderHover = document.querySelector('.gallery__slider');
  if (gallerySliderHover) {
    var galleryPrevButton = gallerySliderHover.querySelector('.swiper-button-prev');
    var galleryNextButton = gallerySliderHover.querySelector('.swiper-button-next');
    var galleryCursor = gallerySliderHover.querySelector('.swiper-button-circle--hover');
    if (galleryPrevButton && galleryNextButton && galleryCursor && window.matchMedia('(hover: hover)').matches) {
      var animateCursor = function animateCursor() {
        cursorX += (mouseX - cursorX) * 0.1;
        cursorY += (mouseY - cursorY) * 0.1;
        galleryCursor.style.left = "".concat(cursorX - 50, "px");
        galleryCursor.style.top = "".concat(cursorY - 50, "px");
        requestAnimationFrame(animateCursor);
      };
      var mouseX = 0,
        mouseY = 0;
      var cursorX = 0,
        cursorY = 0;
      gallerySliderHover.addEventListener('mousemove', function (event) {
        var rect = event.currentTarget.getBoundingClientRect();
        mouseX = event.clientX - rect.left;
        mouseY = event.clientY - rect.top;
        galleryCursor.classList.add('is--active');
      });
      gallerySliderHover.addEventListener('mouseleave', function () {
        galleryCursor.classList.remove('is--active');
      });
      galleryPrevButton.addEventListener('mouseenter', function () {
        galleryCursor.textContent = 'Назад';
      });
      galleryNextButton.addEventListener('mouseenter', function () {
        galleryCursor.textContent = 'Далее';
      });
      galleryPrevButton.addEventListener('mouseleave', function () {
        galleryCursor.textContent = '';
      });
      galleryNextButton.addEventListener('mouseleave', function () {
        galleryCursor.textContent = '';
      });
      animateCursor();
    }
  }

  // select case button
  var selectCaseBg = document.querySelector('.select-case__bg');
  var selectCaseButtonHover = document.querySelector('.select-case__circle');
  if (selectCaseButtonHover) {
    if (window.matchMedia('(hover: hover)').matches) {
      var _animateCursor = function _animateCursor() {
        _cursorX += (_mouseX - _cursorX) * 0.1;
        _cursorY += (_mouseY - _cursorY) * 0.1;
        selectCaseButtonHover.style.left = "".concat(_cursorX - 50, "px");
        selectCaseButtonHover.style.top = "".concat(_cursorY - 50, "px");
        requestAnimationFrame(_animateCursor);
      };
      var _mouseX = 0,
        _mouseY = 0;
      var _cursorX = 0,
        _cursorY = 0;
      selectCaseBg.addEventListener('mousemove', function (event) {
        var rect = event.currentTarget.getBoundingClientRect();
        _mouseX = event.clientX - rect.left;
        _mouseY = event.clientY - rect.top;
        selectCaseButtonHover.classList.add('is--active');
      });
      selectCaseBg.addEventListener('mouseleave', function () {
        selectCaseButtonHover.classList.remove('is--active');
      });
      _animateCursor();
    }
  }
});