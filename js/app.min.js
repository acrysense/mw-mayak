"use strict";

document.addEventListener('DOMContentLoaded', function () {
  // function's
  function bodyFixScroll(status) {
    var scrollPosition = 0;
    var paddingOffset = window.innerWidth - document.body.offsetWidth + 'px';
    var elementsFixed = document.querySelectorAll('.fixed');
    if (status) {
      document.body.classList.add('scroll-disabled');
      scrollPosition = window.pageYOffset;
      document.body.style.overflow = 'hidden';
      document.body.style.position = 'fixed';
      if (document.body.style.top) {
        document.body.style.top = document.body.style.top;
      } else {
        document.body.style.top = '-' + scrollPosition + 'px';
      }
      document.body.style.width = '100%';
      document.body.style.paddingRight = paddingOffset;
      if (elementsFixed) {
        elementsFixed.forEach(function (item) {
          item.style.marginRight = paddingOffset;
        });
      }
    } else {
      document.body.classList.remove('scroll-disabled');
      scrollPosition = Math.abs(parseInt(document.querySelector('body').style.top.replace('px', '')));
      document.body.style.removeProperty('overflow');
      document.body.style.removeProperty('position');
      document.body.style.removeProperty('top');
      document.body.style.removeProperty('width');
      document.body.style.removeProperty('padding-right');
      if (elementsFixed) {
        elementsFixed.forEach(function (item) {
          item.style.removeProperty('margin-right');
        });
      }
      window.scrollTo({
        top: !isNaN(scrollPosition) ? scrollPosition : 0,
        behavior: 'instant'
      });
    }
  }

  // inputmask
  Inputmask().mask(document.querySelectorAll('input'));

  // aos
  AOS.init({
    once: true
  });

  // textarea
  var allTexareas = document.querySelectorAll('textarea');
  if (allTexareas) {
    allTexareas.forEach(function (el) {
      el.style.height = el.setAttribute('style', 'height: ' + el.scrollHeight + 'px');
      el.classList.add('auto');
      el.addEventListener('input', function (e) {
        el.style.height = 'auto';
        el.style.height = el.scrollHeight + 'px';
      });
    });
  }

  // lottie
  // const mainWaves = document.getElementById('main-waves')
  var architectureWaves = document.getElementById('architecture-waves');
  var engineeringWaves = document.getElementById('engineering-waves');
  var yardWaves = document.getElementById('yard-waves');
  var mopsWaves = document.getElementById('mops-waves');
  var bgWaves = document.getElementById('bg-waves');

  // if (mainWaves) {
  // var mainWavesAnimation = lottie.loadAnimation({
  //     container: mainWaves,
  //     renderer: 'svg',
  //     loop: true,
  //     autoplay: true,
  //     path: 'main.json'
  // });

  var firstAnimation = lottie.loadAnimation({
    container: document.getElementById('main-first-animation'),
    renderer: 'svg',
    loop: false,
    autoplay: true,
    path: 'main-first.json'
  });
  firstAnimation.addEventListener('complete', function () {
    var firstContainer = document.getElementById('main-first-animation');
    var secondContainer = document.getElementById('main-second-animation');
    var secondAnimation = lottie.loadAnimation({
      container: secondContainer,
      renderer: 'svg',
      loop: true,
      autoplay: true,
      path: 'main.json'
    });
    setTimeout(function () {
      firstContainer.classList.add('is--hidden');
    }, 50);
  });
  // }

  if (architectureWaves) {
    var architectureWavesAnimation = lottie.loadAnimation({
      container: architectureWaves,
      renderer: 'svg',
      loop: true,
      autoplay: true,
      path: 'architecture.json'
    });
  }
  if (engineeringWaves) {
    var engineeringWavesAnimation = lottie.loadAnimation({
      container: engineeringWaves,
      renderer: 'svg',
      loop: true,
      autoplay: true,
      path: 'engineering.json'
    });
  }
  if (yardWaves) {
    var yardWavesAnimation = lottie.loadAnimation({
      container: yardWaves,
      renderer: 'svg',
      loop: true,
      autoplay: true,
      path: 'yard.json'
    });
  }
  if (mopsWaves) {
    var mopsWavesAnimation = lottie.loadAnimation({
      container: mopsWaves,
      renderer: 'svg',
      loop: true,
      autoplay: true,
      path: 'mops.json'
    });
  }
  if (bgWaves) {
    var bgWavesAnimation = lottie.loadAnimation({
      container: bgWaves,
      renderer: 'svg',
      loop: true,
      autoplay: true,
      path: 'white-lines.json'
    });
  }

  // promo details animation
  var promoDetailsItem = document.querySelectorAll('.promo-details__item');
  var handleScroll = function handleScroll() {
    var viewportHeight = window.innerHeight || document.documentElement.clientHeight;
    var viewportCenter = viewportHeight / 2;
    promoDetailsItem.forEach(function (item) {
      var rect = item.getBoundingClientRect();
      var itemCenter = rect.top + rect.height / 2;
      if (itemCenter > viewportCenter - rect.height / 2 && itemCenter < viewportCenter + rect.height / 2) {
        var targetHeight = viewportHeight * 0.8;
        item.style.height = "".concat(targetHeight, "px");
        if (!item.classList.contains('is--open')) {
          item.classList.add('is--open');
        }
      } else {
        if (item.classList.contains('is--open')) {
          item.classList.remove('is--open');
        }
      }
    });
    ScrollTrigger.refresh();
  };
  window.addEventListener('scroll', handleScroll);
  window.addEventListener('resize', handleScroll);
  handleScroll();

  // menu
  var header = document.getElementById('header');
  var menu = document.getElementById('menu');
  var menuTrigger = document.getElementById('hamburger-toggle');
  if (header && menu && menuTrigger) {
    menuTrigger.addEventListener('click', function (event) {
      event.preventDefault();
      if (menu.classList.contains('is--active')) {
        header.classList.remove('is--menu');
        menuTrigger.classList.remove('is--active');
        menu.classList.remove('is--active');
        bodyFixScroll();
      } else {
        header.classList.add('is--menu');
        menuTrigger.classList.add('is--active');
        menu.classList.add('is--active');
        bodyFixScroll(1);
      }
    });
  }

  // menu nav
  var menuNavLink = document.querySelectorAll('.menu__link');
  var menuImg = document.querySelector('.menu__img');
  if (menuNavLink) {
    menuNavLink.forEach(function (link) {
      link.addEventListener('mouseenter', function () {
        var source = link.dataset.img;
        var linkRect = link.getBoundingClientRect();
        menuImg.querySelector('img').src = source;
        menuImg.querySelector('img').onload = function () {
          var imgRect = menuImg.getBoundingClientRect();
          var imgX = linkRect.right;
          var imgY = linkRect.top;
          if (imgX + imgRect.width > window.innerWidth) {
            imgX = linkRect.left - imgRect.width;
          }
          if (imgY + imgRect.height > window.innerHeight) {
            imgY = window.innerHeight - imgRect.height;
          }
          menuImg.style.left = "".concat(imgX, "px");
          menuImg.style.top = "".concat(imgY, "px");
          if (!menuImg.classList.contains('is--active')) {
            menuImg.classList.add('is--active');
          }
        };
      });
      link.addEventListener('mouseleave', function () {
        if (menuImg.classList.contains('is--active')) {
          menuImg.classList.remove('is--active');
        }
      });
    });
  }

  // btn to top
  var btnToTop = document.querySelector('.footer__to-top');
  var rootElement = document.documentElement;
  function scrollToTop() {
    rootElement.scrollTo({
      top: 0,
      behavior: 'smooth'
    });
  }
  if (btnToTop) {
    btnToTop.addEventListener('click', scrollToTop);
  }

  // gallery slider
  var gallerySlider = document.querySelector('.gallery__slider .swiper');
  if (gallerySlider) {
    var myGallerySlider = new Swiper(gallerySlider, {
      slidesPerView: 1,
      loop: true,
      allowTouchMove: false,
      speed: 800,
      parallax: true,
      watchSlidesProgress: true,
      navigation: {
        prevEl: '.gallery__slider .swiper-button-prev',
        nextEl: '.gallery__slider .swiper-button-next'
      }
    });
  }

  // gallery buttons
  var gallerySliderHover = document.querySelector('.gallery__slider');
  if (gallerySliderHover) {
    var galleryPrevButton = gallerySliderHover.querySelector('.swiper-button-prev');
    var galleryNextButton = gallerySliderHover.querySelector('.swiper-button-next');
    var galleryCursor = gallerySliderHover.querySelector('.swiper-button-circle--hover');
    if (galleryPrevButton && galleryNextButton && galleryCursor && window.matchMedia('(hover: hover)').matches) {
      var animateCursor = function animateCursor() {
        cursorX += (mouseX - cursorX) * 0.1;
        cursorY += (mouseY - cursorY) * 0.1;
        galleryCursor.style.left = "".concat(cursorX - 50, "px");
        galleryCursor.style.top = "".concat(cursorY - 50, "px");
        requestAnimationFrame(animateCursor);
      };
      var mouseX = 0,
        mouseY = 0;
      var cursorX = 0,
        cursorY = 0;
      gallerySliderHover.addEventListener('mousemove', function (event) {
        var rect = event.currentTarget.getBoundingClientRect();
        mouseX = event.clientX - rect.left;
        mouseY = event.clientY - rect.top;
        galleryCursor.classList.add('is--active');
      });
      gallerySliderHover.addEventListener('mouseleave', function () {
        galleryCursor.classList.remove('is--active');
      });
      galleryPrevButton.addEventListener('mouseenter', function () {
        galleryCursor.textContent = 'Назад';
      });
      galleryNextButton.addEventListener('mouseenter', function () {
        galleryCursor.textContent = 'Далее';
      });
      galleryPrevButton.addEventListener('mouseleave', function () {
        galleryCursor.textContent = '';
      });
      galleryNextButton.addEventListener('mouseleave', function () {
        galleryCursor.textContent = '';
      });
      animateCursor();
    }
  }
});