"use strict";

document.addEventListener('DOMContentLoaded', function () {
  // function's
  function bodyFixScroll(status) {
    var scrollPosition = 0;
    var paddingOffset = window.innerWidth - document.body.offsetWidth + 'px';
    var elementsFixed = document.querySelectorAll('.fixed');
    if (status) {
      document.body.classList.add('scroll-disabled');
      scrollPosition = window.pageYOffset;
      document.body.style.overflow = 'hidden';
      document.body.style.position = 'fixed';
      if (document.body.style.top) {
        document.body.style.top = document.body.style.top;
      } else {
        document.body.style.top = '-' + scrollPosition + 'px';
      }
      document.body.style.width = '100%';
      document.body.style.paddingRight = paddingOffset;
      if (elementsFixed) {
        elementsFixed.forEach(function (item) {
          item.style.marginRight = paddingOffset;
        });
      }
    } else {
      document.body.classList.remove('scroll-disabled');
      scrollPosition = Math.abs(parseInt(document.querySelector('body').style.top.replace('px', '')));
      document.body.style.removeProperty('overflow');
      document.body.style.removeProperty('position');
      document.body.style.removeProperty('top');
      document.body.style.removeProperty('width');
      document.body.style.removeProperty('padding-right');
      if (elementsFixed) {
        elementsFixed.forEach(function (item) {
          item.style.removeProperty('margin-right');
        });
      }
      window.scrollTo({
        top: !isNaN(scrollPosition) ? scrollPosition : 0,
        behavior: 'instant'
      });
    }
  }

  // inputmask
  Inputmask().mask(document.querySelectorAll('input'));

  // aos
  AOS.init({
    once: true
  });

  // textarea
  var allTexareas = document.querySelectorAll('textarea');
  if (allTexareas) {
    allTexareas.forEach(function (el) {
      el.style.height = el.setAttribute('style', 'height: ' + el.scrollHeight + 'px');
      el.classList.add('auto');
      el.addEventListener('input', function (e) {
        el.style.height = 'auto';
        el.style.height = el.scrollHeight + 'px';
      });
    });
  }

  // lottie
  var mainWaves = document.getElementById('main-waves');
  var architectureWaves = document.getElementById('architecture-waves');
  var engineeringWaves = document.getElementById('engineering-waves');
  var yardWaves = document.getElementById('yard-waves');
  var mopsWaves = document.getElementById('mops-waves');
  var bgWaves = document.getElementById('bg-waves');
  if (mainWaves) {
    var mainWavesAnimation = lottie.loadAnimation({
      container: mainWaves,
      renderer: 'svg',
      loop: true,
      autoplay: true,
      path: 'main.json'
    });
  }
  if (architectureWaves) {
    var architectureWavesAnimation = lottie.loadAnimation({
      container: architectureWaves,
      renderer: 'svg',
      loop: true,
      autoplay: true,
      path: 'architecture.json'
    });
  }
  if (engineeringWaves) {
    var engineeringWavesAnimation = lottie.loadAnimation({
      container: engineeringWaves,
      renderer: 'svg',
      loop: true,
      autoplay: true,
      path: 'engineering.json'
    });
  }
  if (yardWaves) {
    var yardWavesAnimation = lottie.loadAnimation({
      container: yardWaves,
      renderer: 'svg',
      loop: true,
      autoplay: true,
      path: 'yard.json'
    });
  }
  if (mopsWaves) {
    var mopsWavesAnimation = lottie.loadAnimation({
      container: mopsWaves,
      renderer: 'svg',
      loop: true,
      autoplay: true,
      path: 'mops.json'
    });
  }
  if (bgWaves) {
    var bgWavesAnimation = lottie.loadAnimation({
      container: bgWaves,
      renderer: 'svg',
      loop: true,
      autoplay: true,
      path: 'white-lines.json'
    });
  }

  // menu
  var header = document.getElementById('header');
  var menu = document.getElementById('menu');
  var menuTrigger = document.getElementById('hamburger-toggle');
  if (header && menu && menuTrigger) {
    menuTrigger.addEventListener('click', function (event) {
      event.preventDefault();
      if (menu.classList.contains('is--active')) {
        header.classList.remove('is--menu');
        menuTrigger.classList.remove('is--active');
        menu.classList.remove('is--active');
        bodyFixScroll();
      } else {
        header.classList.add('is--menu');
        menuTrigger.classList.add('is--active');
        menu.classList.add('is--active');
        bodyFixScroll(1);
      }
    });
  }

  // menu nav
  var menuNavLink = document.querySelectorAll('.menu__link');
  var menuImg = document.querySelector('.menu__img');
  if (menuNavLink) {
    menuNavLink.forEach(function (link) {
      link.addEventListener('mouseover', function () {
        var source = link.dataset.img;
        if (source) {
          if (!menuImg.classList.contains('is--active')) {
            menuImg.classList.add('is--active');
          }
          menuImg.querySelector('img').src = link.dataset.img;
        }
      });
      link.addEventListener('mouseout', function () {
        if (menuImg.classList.contains('is--active')) {
          menuImg.classList.remove('is--active');
        }
      });
    });
  }

  // btn to top
  var btnToTop = document.querySelector('.footer__to-top');
  var rootElement = document.documentElement;
  function scrollToTop() {
    rootElement.scrollTo({
      top: 0,
      behavior: 'smooth'
    });
  }
  if (btnToTop) {
    btnToTop.addEventListener('click', scrollToTop);
  }

  // gallery slider
  var gallerySlider = document.querySelector('.gallery__slider .swiper');
  if (gallerySlider) {
    var myGallerySlider = new Swiper(gallerySlider, {
      slidesPerView: 1,
      loop: true,
      allowTouchMove: false,
      speed: 800,
      parallax: true,
      watchSlidesProgress: true,
      navigation: {
        prevEl: '.gallery__slider .swiper-button-prev',
        nextEl: '.gallery__slider .swiper-button-next'
      }
    });
  }

  // gallery buttons
  var galleryPrevButton = document.querySelector('.gallery__slider .swiper-button-prev');
  var galleryNextButton = document.querySelector('.gallery__slider .swiper-button-next');
  var galleryCursorPrev = document.querySelector('.gallery__slider .swiper-button-prev .swiper-button-circle');
  var galleryCursorNext = document.querySelector('.gallery__slider .swiper-button-next .swiper-button-circle');
  if (galleryPrevButton && galleryNextButton && galleryCursorPrev && galleryCursorNext && window.matchMedia('(hover: hover)').matches) {
    var animateCursors = function animateCursors() {
      cursorXPrev += (prevMouseX - cursorXPrev) * 0.1;
      cursorYPrev += (prevMouseY - cursorYPrev) * 0.1;
      galleryCursorPrev.style.left = "".concat(cursorXPrev, "px");
      galleryCursorPrev.style.top = "".concat(cursorYPrev, "px");
      cursorXNext += (nextMouseX - cursorXNext) * 0.1;
      cursorYNext += (nextMouseY - cursorYNext) * 0.1;
      galleryCursorNext.style.left = "".concat(cursorXNext, "px");
      galleryCursorNext.style.top = "".concat(cursorYNext, "px");
      requestAnimationFrame(animateCursors);
    };
    var prevMouseX = 0,
      prevMouseY = 0;
    var nextMouseX = 0,
      nextMouseY = 0;
    var cursorXPrev = 0,
      cursorYPrev = 0;
    var cursorXNext = 0,
      cursorYNext = 0;
    galleryPrevButton.addEventListener('mousemove', function (event) {
      var rect = galleryPrevButton.getBoundingClientRect();
      prevMouseX = event.clientX - rect.left;
      prevMouseY = event.clientY - rect.top;
    });
    galleryNextButton.addEventListener('mousemove', function (event) {
      var rect = galleryNextButton.getBoundingClientRect();
      nextMouseX = event.clientX - rect.left;
      nextMouseY = event.clientY - rect.top;
    });
    animateCursors();
  }
});